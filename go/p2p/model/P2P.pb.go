// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.3
// source: P2P.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
//Packet is to transmit a piece of data from one process to one or more processes.
type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source process id of this packet.
	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// The destination id, can be a process destination id or a topic.
	Did string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	// The switch id, switch is the machine 2 machine aggregator. For example, each k8s
	// node will have a switch service (not a pod)
	Swid string `protobuf:"bytes,3,opt,name=swid,proto3" json:"swid,omitempty"`
	// To uniquely identify the source packet, the sender process maintain a sequence number.
	Seq int32 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	// Priority of this packet
	Pri int32 `protobuf:"varint,5,opt,name=pri,proto3" json:"pri,omitempty"`
	// The packet data
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_P2P_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_P2P_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_P2P_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Packet) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Packet) GetSwid() string {
	if x != nil {
		return x.Swid
	}
	return ""
}

func (x *Packet) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Packet) GetPri() int32 {
	if x != nil {
		return x.Pri
	}
	return 0
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_P2P_proto protoreflect.FileDescriptor

var file_P2P_proto_rawDesc = []byte{
	0x0a, 0x09, 0x50, 0x32, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x32, 0x70,
	0x22, 0x78, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x77, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x77,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x70, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x4c, 0x0a, 0x17, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x32, 0x70, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x03, 0x70, 0x32, 0x70, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x69, 0x63, 0x68, 0x6c, 0x65,
	0x72, 0x2f, 0x6d, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x32, 0x70, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_P2P_proto_rawDescOnce sync.Once
	file_P2P_proto_rawDescData = file_P2P_proto_rawDesc
)

func file_P2P_proto_rawDescGZIP() []byte {
	file_P2P_proto_rawDescOnce.Do(func() {
		file_P2P_proto_rawDescData = protoimpl.X.CompressGZIP(file_P2P_proto_rawDescData)
	})
	return file_P2P_proto_rawDescData
}

var file_P2P_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_P2P_proto_goTypes = []interface{}{
	(*Packet)(nil), // 0: p2p.Packet
}
var file_P2P_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_P2P_proto_init() }
func file_P2P_proto_init() {
	if File_P2P_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_P2P_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_P2P_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_P2P_proto_goTypes,
		DependencyIndexes: file_P2P_proto_depIdxs,
		MessageInfos:      file_P2P_proto_msgTypes,
	}.Build()
	File_P2P_proto = out.File
	file_P2P_proto_rawDesc = nil
	file_P2P_proto_goTypes = nil
	file_P2P_proto_depIdxs = nil
}
